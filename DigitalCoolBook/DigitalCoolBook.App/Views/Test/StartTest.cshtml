@model DigitalCoolBook.App.Models.TestviewModels.TestStartViewModel

@{
    Layout = "~/Views/Shared/_SubjectDetailLayout.cshtml";
}

<input type="hidden" id="setTimer" value="@Model.Timer" />

<div class="container">
    <div class="col text-center mt-4">
        <h3>
            @Model.TestName
        </h3>
    </div>
    <form id="form" asp-action="EndTest" method="post">
        <div class="row ">
            <div class="col-md-6 text-left">
                <div class="col">
                    @Html.DisplayNameFor(model => model.Date)
                </div>
                <div class="col" id="dateTime">
                    @Convert.ToString(string.Format("{0:dd/mm/yyyy}", Model.Date))
                    <div class="digital-clock">00:00:00</div>
                </div>
            </div>
            <div class="col-md-6 text-right">
                <div class="col">
                    @Html.DisplayNameFor(model => model.Timer)
                </div>
                <div class="col" id="timer">
                </div>
            </div>
            <div class="col w-50 text-center">
                @for (int i = 0; i < Model.Questions.Count; i++)
                {
                    <ul class="list-group">
                        <li class="list-group-item ">
                            @Html.CheckBoxFor(m => m.Questions[i].IsChecked)
                            @Html.DisplayName(Model.Questions[i].Name)
                        </li>
                    </ul>
                }
            </div>
        </div>
        <div class="text-center">
            <button class="btn btn-outline-info mt-2 mb-2">Напред</button>
        </div>
        <div class="text-right pb-1">
            <input type="submit" value="Предаване" class="btn btn-outline-danger" />
        </div>
    </form>
</div>

@*countdown function*@
<script type="text/javascript">

    var countDownDate = new Date(Date.parse($('#setTimer').val())).getTime();

    // Update the count down every 1 second
    var x = setInterval(function () {

        // Get today's date and time
        var now = new Date().getTime();

        // Find the distance between now and the count down date
        var distance = countDownDate - now;

        // Time calculations for days, hours, minutes and seconds
        var days = Math.floor(distance / (1000 * 60 * 60 * 24));
        var hours = Math.floor((distance % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));
        var minutes = Math.floor((distance % (1000 * 60 * 60)) / (1000 * 60));
        var seconds = Math.floor((distance % (1000 * 60)) / 1000);

        // Display the result in the element with id="demo"
        document.getElementById("timer").innerHTML = days + "d " + hours + "h "
            + minutes + "m " + seconds + "s ";

        // If the count down is finished, write some text
        if (distance < 0) {
            clearInterval(x);
            document.getElementById("timer").innerHTML = "EXPIRED";

            // FIX not working
            // Ajax to save the test and set "IsExpired" to "true"
            $(function () {
                $("#form").submit(function (event) {
                    aler("Теста е предаден.");
                })
            })
        }
    }, 1000);
</script>

@*digital-clock function*@
<script>
    $(document).ready(function () {
        clockUpdate();
        setInterval(clockUpdate, 1000);
    })

    function clockUpdate() {
        var date = new Date();
        $('.digital-clock');
        function addZero(x) {
            if (x < 10) {
                return x = '0' + x;
            } else {
                return x;
            }
        }

        function twelveHour(x) {
            if (x > 12) {
                return x = x - 12;
            } else if (x == 0) {
                return x = 12;
            } else {
                return x;
            }
        }

        var h = addZero(twelveHour(date.getHours()));
        var m = addZero(date.getMinutes());
        var s = addZero(date.getSeconds());

        $('.digital-clock').text(h + ':' + m + ':' + s)
    }
</script>
